<?php
namespace common\components;

use Yii;
use common\models\UserType;

/**
 * @inheritdoc
 *
 * @property \common\models\User|\yii\web\IdentityInterface|null $identity The identity object associated with the currently logged-in user. null is returned if the user is not logged in (not authenticated).
 */
class User extends \yii\web\User
{

    public function can($permissionName, $params = [], $allowCaching = true)
    {
        //if(Yii::$app->id == 'app-backend') {
        if (!Yii::$app->authManager->getPermission($permissionName) && !Yii::$app->authManager->getRole($permissionName)) {
            $createPost = Yii::$app->authManager->createPermission($permissionName);
            $createPost->description = 'Created-Automatically';
            Yii::$app->authManager->add($createPost);
        }

        // if (!Yii::$app->user->isGuest && in_array(Yii::$app->user->identity->id,[1,2])) {
        //     return true;
        // }

        $result = parent::can($permissionName, $params, $allowCaching); // TODO: Change the autogenerated stub

        // grant super admin all permissions
        if(!$result && $this->isSuperAdmin){
            $result = true;
        }

        //}
        return $result;
    }

    public function getIsSuperAdmin(){
        return !empty($this->identity) && $this->identity->id == UserType::SUPER_ADMIN;
    }

    public function getIsAdmin(){
        return !empty($this->identity) && $this->identity->id == UserType::ADMIN;
    }

}