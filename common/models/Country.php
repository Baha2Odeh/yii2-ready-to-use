<?php

namespace common\models;

use Yii;
use yii\caching\TagDependency;
use yii\helpers\ArrayHelper;

/**
 * This is the model class for table "{{%country}}".
 *
 * @property int $id
 * @property string $iso
 * @property string $name
 * @property string $printable_name
 * @property string $iso3
 * @property int $numcode
 * @property int $dialing_code_1
 * @property int $dialing_code_2
 * @property int $dialing_code_3
 * @property int $degree_language_id
 * @property int $weight
 * @property string $arabic_name
 * @property string $created_at
 * @property int $created_by
 * @property string $updated_at
 * @property int $updated_by
 * @property int $is_deleted
 * @property string $deleted_at
 * @property int $deleted_by
 * @property string $ip_address
 * @property string $user_agent
 *
 * @property City[] $cities
 * @property User[] $users
 */
class Country extends \common\models\ActiveRecord
{
    const JORDAN = 100;

    const CACHE_KEY = 'cache:tag:country:list';
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return '{{%country}}';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['numcode', 'dialing_code_1', 'dialing_code_2', 'dialing_code_3', 'degree_language_id', 'weight'], 'integer'],
            [['arabic_name'], 'required'],
            //[['created_at', 'updated_at', 'deleted_at'], 'safe'],
            [['iso', 'name', 'printable_name', 'iso3', 'arabic_name'], 'string', 'max' => 255],
           // [['ip_address'], 'string', 'max' => 40],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'iso' => Yii::t('app', 'Iso'),
            'name' => Yii::t('app', 'Name'),
            'printable_name' => Yii::t('app', 'Printable Name'),
            'iso3' => Yii::t('app', 'Iso3'),
            'numcode' => Yii::t('app', 'Numcode'),
            'dialing_code_1' => Yii::t('app', 'Dialing Code 1'),
            'dialing_code_2' => Yii::t('app', 'Dialing Code 2'),
            'dialing_code_3' => Yii::t('app', 'Dialing Code 3'),
            'degree_language_id' => Yii::t('app', 'Degree Language ID'),
            'weight' => Yii::t('app', 'Weight'),
            'arabic_name' => Yii::t('app', 'Arabic Name'),
            'created_at' => Yii::t('app', 'Created At'),
            'created_by' => Yii::t('app', 'Created By'),
            'updated_at' => Yii::t('app', 'Updated At'),
            'updated_by' => Yii::t('app', 'Updated By'),
            'is_deleted' => Yii::t('app', 'Is Deleted'),
            'deleted_at' => Yii::t('app', 'Deleted At'),
            'deleted_by' => Yii::t('app', 'Deleted By'),
            'ip_address' => Yii::t('app', 'Ip Address'),
            'user_agent' => Yii::t('app', 'User Agent'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCities()
    {
        return $this->hasMany(City::className(), ['country_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUsers()
    {
        return $this->hasMany(User::className(), ['country_id' => 'id']);
    }

    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub

        TagDependency::invalidate(Yii::$app->cache,self::CACHE_KEY);
    }


    /**
     * @param bool $asArray
     * @return array|Country[]|\yii\db\ActiveRecord[]
     */
    public static function getCachedList($asArray=false){
        $list = self::find()->cache(0,new TagDependency(['tags' => self::CACHE_KEY]));
        if($asArray){
            $list->asArray();
        }
        return $list->all();
    }

    /**
     * @param string $language
     * @return array
     */
    public static function getCountryList($language='en'){
        $list = self::getCachedList(true);
        return ArrayHelper::map($list,'id',$language == 'en' ? 'name' : 'arabic_name');
    }
}
