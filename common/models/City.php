<?php

namespace common\models;

use Yii;
use yii\caching\TagDependency;
use yii\helpers\ArrayHelper;

/**
 * This is the model class for table "{{%city}}".
 *
 * @property int $id
 * @property string $name
 * @property int $country_id
 * @property string $arabic_name
 * @property string $alternate_names
 * @property int $position
 * @property int $province_id
 * @property string $created_at
 * @property int $created_by
 * @property string $updated_at
 * @property int $updated_by
 * @property int $is_deleted
 * @property string $deleted_at
 * @property int $deleted_by
 * @property string $ip_address
 * @property string $user_agent
 *
 * @property Country $country
 * @property User[] $users
 */
class City extends \common\models\ActiveRecord
{
    const JORDAN_AMMAN = 39982;

    const CACHE_KEY = 'cache:tag:city:list';
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return '{{%city}}';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['name', 'country_id'], 'required'],
            [['country_id', 'position', 'province_id'], 'integer'],
            [['alternate_names'], 'string'],
            [['name', 'arabic_name'], 'string', 'max' => 255],
            [['country_id'], 'exist', 'skipOnError' => true, 'targetClass' => Country::className(), 'targetAttribute' => ['country_id' => 'id']],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'name' => Yii::t('app', 'Name'),
            'country_id' => Yii::t('app', 'Country ID'),
            'arabic_name' => Yii::t('app', 'Arabic Name'),
            'alternate_names' => Yii::t('app', 'Alternate Names'),
            'position' => Yii::t('app', 'Position'),
            'province_id' => Yii::t('app', 'Province ID'),
            'created_at' => Yii::t('app', 'Created At'),
            'created_by' => Yii::t('app', 'Created By'),
            'updated_at' => Yii::t('app', 'Updated At'),
            'updated_by' => Yii::t('app', 'Updated By'),
            'is_deleted' => Yii::t('app', 'Is Deleted'),
            'deleted_at' => Yii::t('app', 'Deleted At'),
            'deleted_by' => Yii::t('app', 'Deleted By'),
            'ip_address' => Yii::t('app', 'Ip Address'),
            'user_agent' => Yii::t('app', 'User Agent'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCountry()
    {
        return $this->hasOne(Country::className(), ['id' => 'country_id']);
    }


    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUsers()
    {
        return $this->hasMany(User::className(), ['city_id' => 'id']);
    }

    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub

        TagDependency::invalidate(Yii::$app->cache,self::CACHE_KEY);
    }


    /**
     * @param bool $asArray
     * @return array|City[]|\yii\db\ActiveRecord[]
     */
    public static function getCachedList($asArray=false){
        $list = self::find()->cache(0,new TagDependency(['tags' => self::CACHE_KEY]));
        if($asArray){
            $list->asArray();
        }
        return $list->all();
    }

    /**
     * @param string $language
     * @return array
     */
    public static function getCityList($country_id=null,$language='en'){
        $list = self::getCachedList(true);
        $list =  ArrayHelper::map($list,'id',$language == 'en' ? 'name' : 'arabic_name',!empty($country_id) ? 'country_id' : null);

        if(!empty($country_id)){
            return !empty($list[$country_id]) ? $list[$country_id] : [];
        }

        return $list;
    }
}
